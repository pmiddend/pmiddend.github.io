<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plato’s Blog</title>
    <link>https://pmiddend.github.io/</link>
    <description>Recent content on Plato’s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Nov 2020 17:51:01 +0100</lastBuildDate><atom:link href="https://pmiddend.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using nixGL to fix OpenGL applications on non-NixOS distributions</title>
      <link>https://pmiddend.github.io/posts/nixgl-on-ubuntu/</link>
      <pubDate>Tue, 10 Nov 2020 17:51:01 +0100</pubDate>
      
      <guid>https://pmiddend.github.io/posts/nixgl-on-ubuntu/</guid>
      <description>The Nix package manager can be installed on any Linux distribution, on Mac and even on Windows. I’m currently using Ubuntu 20 and am enjoying home-manager to declaratively manage my $HOME directory using Nix tooling. For instance, to use my favorite browser qutebrowser, I could just add it into my ~/.config/nixpkgs/home.nix under packages:
{ config, pkgs, ... }: { home.packages = [ pkgs.qutebrowser ]; }   However, since I also want to configure qutebrowser keybindings using home-manager, I’m using the builtin module instead:</description>
    </item>
    
    <item>
      <title>Quick tip: Named Terminals in emacs</title>
      <link>https://pmiddend.github.io/posts/named-terminals/</link>
      <pubDate>Tue, 10 Nov 2020 13:13:08 +0100</pubDate>
      
      <guid>https://pmiddend.github.io/posts/named-terminals/</guid>
      <description>I’m using the very convenient vterm package to open a terminal in emacs. Now, as with tabs in your browser, you tend to accumulate terminals over time, and you end up with:
  vterm
  vterm&amp;lt;1&amp;gt;
  vterm&amp;lt;2&amp;gt;
  vterm&amp;lt;3&amp;gt;
  …
  And as you can see, it’s even worse than with browser tabs, because you don’t have a natural “title” for terminals. You could use the current working directory, but that usually isn’t enough.</description>
    </item>
    
    <item>
      <title>Intelligent Airing</title>
      <link>https://pmiddend.github.io/posts/intelligent-airing/</link>
      <pubDate>Sun, 20 Sep 2020 10:40:30 +0200</pubDate>
      
      <guid>https://pmiddend.github.io/posts/intelligent-airing/</guid>
      <description>Introduction   In this post, I will detail my solution to intelligently air a room in order to ensure proper humidity. The solution is based on an Arduino board, a humidity sensor and some other components. This post is aimed at technically minded people, ideally posessing some Arduino experience.
  What I’ll not tell you   This post will not be one of the many “here’s the code and diagram, just copy and paste” Arduino posts.</description>
    </item>
    
    <item>
      <title>GnuCash für das persönliche Haushaltsbuch</title>
      <link>https://pmiddend.github.io/posts/gnucash-workflow/</link>
      <pubDate>Tue, 15 Sep 2020 14:27:10 +0200</pubDate>
      
      <guid>https://pmiddend.github.io/posts/gnucash-workflow/</guid>
      <description>Einleitung   Um einen Überblick über meine Finanzen zu erhalten, führe ich seit ein paar Monaten ein sogenanntes Haushaltsbuch. Wikipedia beschreibt den Aufbau und Zweck ganz gut:
 Ein Haushaltsbuch wird in der Regel von Privatpersonen geführt. Es stellt dabei alle Einnahmen den Ausgabenposten gegenüber. Alle Einnahmen und Ausgaben sollten dabei übersichtlich und nach Monaten und eventuell nach Kategorien (wie z. B. Ausgaben für Lebensmittel, Haushaltsartikel, Auto oder öffentliche Verkehrsmittel – je nach Bedarf) geordnet sein, um eine klare Budgetierung zu ermöglichen.</description>
    </item>
    
  </channel>
</rss>
